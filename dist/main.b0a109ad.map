{"version":3,"sources":["src/CST.ts","src/scenes/LoadScene.ts","src/scenes/MenuScene.ts","src/CharacterSprite.ts","src/Sprite.ts","src/scenes/PlayScene.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.b0a109ad.map","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        MENU: \"MENU\",\r\n        PLAY: \"PLAY\"\r\n    },\r\n    IMAGE: {\r\n        LOGO: \"logo.png\",\r\n        OPTIONS: \"options_button.png\",\r\n        PLAY: \"play_button.png\",\r\n        TITLE: \"ZombieInvasionBg1.png\"\r\n    },\r\n    AUDIO: {\r\n        TITLE: \"zombie-main-music.ogg\"\r\n    },\r\n    SPRITE: {\r\n        CAT: \"cat.png\"\r\n    }\r\n}","import { CST } from \"../CST\";\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n  constructor() {\r\n    super({\r\n      key: CST.SCENES.LOAD\r\n    });\r\n  }\r\n  init() {}\r\n\r\n  loadImages(){\r\n    this.load.setPath(\"./assets/image\");\r\n\r\n    for(let prop in CST.IMAGE) {\r\n      //@ts-ignore\r\n      this.load.image(CST.IMAGE[prop], CST.IMAGE[prop]);\r\n    }\r\n  }\r\n\r\n  loadAudio(){\r\n    this.load.setPath(\"./assets/audio\");\r\n\r\n    for(let prop in CST.AUDIO) {\r\n      //@ts-ignore\r\n      this.load.audio(CST.AUDIO[prop], CST.AUDIO[prop]);\r\n    }\r\n  }\r\n\r\n  loadSprites(frameConfig?: Phaser.Loader.FileTypes.ImageFrameConfig){\r\n    this.load.setPath(\"./assets/sprite\");\r\n\r\n    for(let prop in CST.SPRITE) {\r\n      //@ts-ignore\r\n      this.load.spritesheet(CST.SPRITE[prop], CST.SPRITE[prop], frameConfig);\r\n    }\r\n  }\r\n\r\n  preload() {\r\n\r\n    this.load.spritesheet(\"anna\", \"./assets/sprite/anna.png\", {frameHeight: 64, frameWidth: 64});\r\n    //load atlas\r\n    this.load.atlas(\"characters\", \"./assets/atlas/characters.png\", \"./assets/atlas/characters.json\");\r\n    this.load.atlas(\"daze\", \"./assets/atlas/daze.png\", \"./assets/atlas/daze.json\");\r\n\r\n    this.loadAudio();\r\n    this.loadSprites({\r\n      frameHeight: 32,\r\n      frameWidth: 32\r\n    });\r\n    this.loadImages();\r\n\r\n    // loading bar\r\n\r\n    let loadingBar = this.add.graphics({\r\n      fillStyle: {\r\n        color: 0xffffff //white\r\n      }\r\n    });\r\n\r\n    /*\r\n      Loader Events:\r\n        complete - when done loading everything\r\n        progress - loader number progress in decimal\r\n    */\r\n\r\n    //simulate large load\r\n    for (let i = 0; i < 100; i++) {\r\n            this.load.spritesheet(\"cat\" + i, \"./assets/sprite/cat.png\", {\r\n                frameHeight: 32,\r\n                frameWidth: 32\r\n            });\r\n    };\r\n\r\n    this.load.on(\"progress\", (percent: number) => {\r\n      loadingBar.fillRect(\r\n        0,\r\n        this.game.renderer.height / 2,\r\n        this.game.renderer.width * percent,\r\n        50\r\n      );\r\n    });\r\n\r\n    this.load.on(\"complete\", () => {\r\n        //this.scene.start(CST.SCENES.MENU, \"Hello from load scene\");\r\n    })\r\n\r\n    this.load.on(\"load\", (file: Phaser.Loader.File) => {\r\n      console.log(file.src);\r\n    })\r\n  }\r\n\r\n  create() {\r\n    this.scene.start(CST.SCENES.MENU);\r\n  }\r\n}\r\n","import { CST } from \"../CST\";\r\n\r\nexport class MenuScene extends Phaser.Scene {\r\n  constructor() {\r\n    super({\r\n      key: CST.SCENES.MENU\r\n    });\r\n  }\r\n  init() {}\r\n\r\n  create() {\r\n    this.add\r\n      .image(\r\n        this.game.renderer.width / 2,\r\n        this.game.renderer.height * 0.2,\r\n        CST.IMAGE.LOGO\r\n      )\r\n      .setDepth(1);\r\n\r\n    this.add\r\n      .image(0, 0, CST.IMAGE.TITLE)\r\n      .setOrigin(0)\r\n      .setDepth(0);\r\n\r\n    let playButton = this.add\r\n      .image(\r\n        this.game.renderer.width / 2,\r\n        this.game.renderer.height / 2,\r\n        CST.IMAGE.PLAY\r\n      )\r\n      .setDepth(1);\r\n\r\n    let optionsButton = this.add\r\n      .image(\r\n        this.game.renderer.width / 2,\r\n        this.game.renderer.height / 2 + 100,\r\n        CST.IMAGE.OPTIONS\r\n      )\r\n      .setDepth(1);\r\n\r\n    //create sprites (if using pixel art, remove sharpen)\r\n\r\n    let hoverSprite = this.add.sprite(100, 100, CST.SPRITE.CAT);\r\n    hoverSprite.setScale(2);\r\n    hoverSprite.setVisible(false);\r\n\r\n    //create audio, disable pauseonblur\r\n\r\n    this.sound.pauseOnBlur = true;\r\n    this.sound.play(CST.AUDIO.TITLE, {\r\n      loop: true\r\n    });\r\n\r\n    //create animation\r\n\r\n    this.anims.create({\r\n      key: \"walk\",\r\n      frameRate: 4,\r\n      repeat: -1,\r\n      frames: this.anims.generateFrameNumbers(CST.SPRITE.CAT, {\r\n        frames: [0, 1, 2, 3]\r\n      })\r\n    });\r\n\r\n    //make image buttons interactive\r\n\r\n    /*    \r\n            PointerEvents:\r\n                pointerover - hovering\r\n                pointerout  - not hovering\r\n                pointerup   - click and release\r\n                pointerdown - just click\r\n      */\r\n\r\n    playButton.setInteractive();\r\n\r\n    playButton.on(\"pointerover\", () => {\r\n      hoverSprite.setVisible(true);\r\n      hoverSprite.play(\"walk\");\r\n      hoverSprite.x = playButton.x - playButton.width;\r\n      hoverSprite.y = playButton.y;\r\n    });\r\n\r\n    playButton.on(\"pointerout\", () => {\r\n      hoverSprite.setVisible(false);\r\n    });\r\n\r\n    playButton.on(\"pointerup\", () => {\r\n      this.scene.start(CST.SCENES.PLAY);\r\n    });\r\n\r\n    optionsButton.setInteractive();\r\n\r\n    optionsButton.on(\"pointerover\", () => {\r\n      hoverSprite.setVisible(true);\r\n      hoverSprite.play(\"walk\");\r\n      hoverSprite.x = optionsButton.x - optionsButton.width;\r\n      hoverSprite.y = optionsButton.y;\r\n    });\r\n\r\n    optionsButton.on(\"pointerout\", () => {\r\n      hoverSprite.setVisible(false);\r\n    });\r\n\r\n    optionsButton.on(\"pointerup\", () => {\r\n      //this.scene.start();\r\n    });\r\n  }\r\n}\r\n","\r\nexport class CharacterSprite extends Phaser.Physics.Arcade.Sprite {\r\n    hp: number;\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number, texture: string, frame?: string | number) {\r\n        super(scene, x, y, texture, frame);\r\n\r\n        scene.sys.updateList.add(this);\r\n        scene.sys.displayList.add(this);\r\n        this.setScale(2);\r\n        scene.physics.world.enableBody(this);\r\n        this.setImmovable(true);\r\n        this.hp = 10;\r\n    }\r\n}","export class Sprite extends Phaser.GameObjects.Sprite {\r\n    \r\n    constructor(scene: Phaser.Scene, x: number, y: number, texture: string, frame?: number | string) {\r\n        super(scene, x, y, texture, frame);\r\n        scene.sys.updateList.add(this);\r\n        scene.sys.displayList.add(this);\r\n    }\r\n}","import { CST } from \"../CST\";\r\nimport { CharacterSprite } from \"../CharacterSprite\";\r\nimport { Sprite } from \"../Sprite\";\r\n\r\nexport class PlayScene extends Phaser.Scene {\r\n    anna!: Phaser.Physics.Arcade.Sprite;\r\n    hooded!: Phaser.Physics.Arcade.Sprite;\r\n    keyboard!: { [index: string]: Phaser.Input.Keyboard.Key };\r\n    assassins!: Phaser.Physics.Arcade.Group;\r\n    fireAttacks!: Phaser.Physics.Arcade.Group;\r\n    constructor() {\r\n        super({ key: CST.SCENES.PLAY });\r\n    }\r\n    preload() {\r\n        this.anims.create({\r\n            key: \"left\",\r\n            frameRate: 10,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 9,\r\n                end: 17\r\n            })\r\n        });\r\n        this.anims.create({\r\n            key: \"down\",\r\n            frameRate: 10,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 18,\r\n                end: 26\r\n            })\r\n        });\r\n        this.anims.create({\r\n            key: \"up\",\r\n            frameRate: 10,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 0,\r\n                end: 8\r\n            })\r\n        });\r\n        this.anims.create({\r\n            key: \"right\",\r\n            frameRate: 10,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 27,\r\n                end: 35\r\n            })\r\n        });\r\n\r\n        this.anims.create({\r\n            key: \"blaze\",\r\n            duration: 50,\r\n            frames: this.anims.generateFrameNames(\"daze\", {\r\n                prefix: \"fire0\",\r\n                suffix: \".png\",\r\n                end: 55\r\n            }),\r\n            showOnStart: true,\r\n            hideOnComplete: true\r\n        });\r\n        this.textures.addSpriteSheetFromAtlas(\"hooded\", { frameHeight: 64, frameWidth: 64, atlas: \"characters\", frame: \"hooded\" })\r\n    }\r\n    create() {\r\n        let cat = new Sprite(this, 300, 20, CST.SPRITE.CAT).setScale(2);\r\n        this.anna = new CharacterSprite(this, 400, 400, \"anna\", 26);\r\n        this.hooded = this.physics.add.sprite(200, 200, \"hooded\", 26).setScale(2).setImmovable(true);\r\n        this.fireAttacks = this.physics.add.group();\r\n        this.assassins = this.physics.add.group({ immovable: true });\r\n        this.assassins.add(this.hooded);\r\n        //this.physics.add.existing() manual add \r\n        window.hooded = this.hooded;\r\n        window.anna = this.anna;\r\n\r\n        //set smaller hitbox\r\n        this.anna.setSize(40, 50).setOffset(10, 10);\r\n        this.anna.setCollideWorldBounds(true);\r\n        this.keyboard = this.input.keyboard.addKeys(\"W, A, S, D\");\r\n        this.input.on(\"pointermove\", (pointer: Phaser.Input.Pointer) => {\r\n            if (pointer.isDown) { //is clicking\r\n                let fire = this.add.sprite(pointer.x, pointer.y, \"daze\", \"fire00.png\").play(\"blaze\");\r\n                this.fireAttacks.add(fire);\r\n                fire.on(\"animationcomplete\", () => {\r\n                    fire.destroy();\r\n                })\r\n            }\r\n        });\r\n\r\n        this.physics.world.addCollider(this.anna, this.assassins, (anna: CharacterSprite, hooded: Phaser.Physics.Arcade.Sprite) => {\r\n            anna.hp--;\r\n            if(anna.hp <= 0){\r\n                anna.destroy();\r\n            }\r\n            hooded.destroy();\r\n        });\r\n\r\n        this.physics.world.addCollider(this.fireAttacks, this.assassins, (fireAttacks: Phaser.Physics.Arcade.Sprite, hooded: Phaser.Physics.Arcade.Sprite) => {\r\n            fireAttacks.destroy();\r\n            hooded.destroy();\r\n\r\n            let x = 0;\r\n            let y = 0;\r\n            switch (Phaser.Math.Between(0, 1)) {\r\n                case 0: x = Phaser.Math.Between(0, this.game.renderer.width);\r\n                    break;\r\n                case 1: y = Phaser.Math.Between(0, this.game.renderer.height);\r\n            }\r\n            for (let i = 0; i < 2; i++) { //spawn 2\r\n                this.assassins.add(this.physics.add.sprite(x, y, \"hooded\", 26).setScale(2).setImmovable(true));\r\n            }\r\n        });\r\n    }\r\n    update(time: number, delta: number) { //delta 16.666 @ 60fps\r\n\r\n        for (let i = 0; i < this.assassins.getChildren().length; i++) {\r\n            this.physics.accelerateToObject(this.assassins.getChildren()[i], this.anna);\r\n\r\n        }\r\n\r\n        if (this.anna.active === true) {\r\n            if (this.keyboard.D.isDown === true) {\r\n                this.anna.setVelocityX(128);\r\n\r\n            }\r\n\r\n            if (this.keyboard.W.isDown === true) {\r\n                this.anna.setVelocityY(-128);\r\n            }\r\n\r\n            if (this.keyboard.S.isDown === true) {\r\n                this.anna.setVelocityY(128);\r\n            }\r\n\r\n            if (this.keyboard.A.isDown === true) {\r\n                this.anna.setVelocityX(-128);\r\n            }\r\n            if (this.keyboard.A.isUp && this.keyboard.D.isUp) { //not moving on X axis\r\n                this.anna.setVelocityX(0);\r\n            }\r\n            if (this.keyboard.W.isUp && this.keyboard.S.isUp) { //not pressing y movement\r\n                this.anna.setVelocityY(0);\r\n            }\r\n\r\n            if (this.anna.body.velocity.x > 0) { //moving right\r\n                this.anna.play(\"right\", true);\r\n            } else if (this.anna.body.velocity.x < 0) { //moving left\r\n                this.anna.anims.playReverse(\"left\", true);\r\n            } else if (this.anna.body.velocity.y < 0) { //moving up\r\n                this.anna.play(\"up\", true);\r\n            } else if (this.anna.body.velocity.y > 0) { //moving down\r\n                this.anna.play(\"down\", true);\r\n            }\r\n        }\r\n\r\n    }\r\n}","/** @type {import(\"../typings/phaser\")} */\r\n\r\nimport { LoadScene } from \"./scenes/LoadScene\";\r\nimport { MenuScene } from \"./scenes/MenuScene\";\r\nimport { PlayScene } from \"./scenes/PlayScene\";\r\n\r\nlet config = {\r\n  type: Phaser.Auto,\r\n  width: 800,\r\n  height: 600,\r\n  scene: [LoadScene, MenuScene, PlayScene],\r\n  render: {\r\n    pixelArt: true\r\n  },\r\n  physics: {\r\n    default: \"arcade\",\r\n    arcade: {\r\n      debug: false\r\n    }\r\n  }\r\n};\r\n\r\nlet game = new Phaser.Game(config);\r\n"]}